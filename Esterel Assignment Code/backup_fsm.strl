module UnitController:


%Inputs
	%Pure Inputs
	input ON;
	input OFF;
	input Resume;

	%Float Inputs
	input Brake;
	input Speed : float;
	input Accel;
	%Outputs
	output CruiseState: integer; %off = 0, ON = 1, Stdby = 2, disable = 3


%SpeedMin : 30.0 km/h
%SpeedMAx : 150.0km/h
%SpeedInc : 2.5km/h
%Kp : 8.113
%Ki: 0.5
%ThrottleSatMax :  45.0%
%PedalsMin : 3.0%

[
%FSM thread
var FSMstate  := 0 :integer in
loop
	var PedalsMin := 3.0f : float in
	var  CruiseState := 0 :integer, previousInputSpeed:=0.0f : float, SpeedMin:= 30.0f :float, SpeedMax:= 150.0f : float in%idle state = 0 %local variable
	%this number can be float %the variable value has to be 0
			

		    if FSMstate = 0 then %IDLE state
			%cruise control set to OFF, In this state, pressing Off, Resume, Set, 				QuickAccel and QuickDecel has no effect.
			CruiseState:= 0;
		        
		        %if ON then
		        %    FSMstate := 1; %cruise controller State is now set to ON 
			%    CruiseState := 1; %state is 1
		        %end if;
			present ON then
		            FSMstate := 1; %cruise controller State is now set to ON 
			    CruiseState := 1; %state is 1
		        end present;

		    end if;

		%ON STATE 
		  if FSMstate = 1 then
			present OFF then 
				FSMstate := 0; %reset back to off state
				CruiseState := 0;
			else 
				present Brake then %if brake pressed while cruise control is on go to standby state 
				
						% = 0.01f
					FSMstate := 2; %standBy state;
					CruiseState := 2;
				else

				if (?Speed) > SpeedMin then
					if ((?Speed) < SpeedMax) then
						present Accel and not Brake then
							CruiseState := 3;
							FSMstate := 3; %disable state
							
						else
							CruiseState:= 1;
							FSMstate := 1;
							%call regulateThrottle(true,Accel,speed);
						
						end present;
					else 
						CruiseState := 3;
						FSMstate := 3;%disable state
					
					end if;
				
				else 
					if (?Speed) < SpeedMin then
						CruiseState := 3;
						FSMstate := 3;%disable state

					elsif (?Speed) > SpeedMax then
							CruiseState := 3;
							FSMstate := 3; %disable state
						
	 				end if;
		 		end if;

				end present;


			end present;
		end if;

		    %From the standby state, the cruise control shall resume either to the on or disable
		    %states, depending on the accelerator pedal and the speed value when the Resume
		    %button is pressed. The last set cruise speed shall be reused.
		%STANDBY STATE
		  if FSMstate = 2 then
			
			present OFF then
							FSMstate := 0;
							CruiseState := 0; % set the state to be disable state	
			else
				present Resume then
					present not Accel then 
						if ((?Speed) > SpeedMin) and ((?Speed) < SpeedMax) then
								CruiseState := 1; %ON
								FSMstate := 1;
						else 
							FSMstate := 3;
							CruiseState := 3; % set the state to be disable state	
						
					
						end if;
					else
						FSMstate := 3;
						CruiseState := 3; % set the state to be disable state	
				
					end present;

				end present;		
			end present;

		  end if;

		%Disabled state
		if FSMstate = 3 then
		
			present OFF then %the highest priority signal
						FSMstate := 0;
						CruiseState := 0;
			else
					present Brake then
						FSMstate := 2;
						CruiseState := 2;
					else
			
						present not Accel then
							if( (?Speed) > SpeedMin) and ((?Speed) <SpeedMax ) then
									CruiseState := 1;
									FSMstate := 1; %state set to ON
							end if;

						end present;
					end present;
			end present;
		end if;




		if(FSMstate = 0) then
			emit CruiseState(0);
			
 		elsif(FSMstate = 1) then
			emit CruiseState(1);
			
		elsif(FSMstate = 2) then
			emit CruiseState(2);
			
		elsif(FSMstate = 3) then
			emit CruiseState(3);
		end if;
		
		await tick;
	end var
	end var
end loop
end var
]

end module
